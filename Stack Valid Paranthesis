import java.util.*;

public class ValidParanthesis {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int val = 1, n = 1;
//        while(n<=11)
//       {
        String str = scan.next();
        Stack<Character> stack = new Stack<>();
        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) == '{' || str.charAt(i) == '(' || str.charAt(i) == '[')
                stack.push(str.charAt(i));
            else {
                if (stack.empty()) {
                    val = 0;
                    break;
                } else {
                    char top = stack.pop();
                    switch (str.charAt(i)) {
                        case '}':
                            if (top == ']' || top == '(')
                                val = 0;
                            break;
                        case ']':
                            if (top == '}' || top == '(')
                                val = 0;
                            break;
                        case ')':
                            if (top == '}' || top == ']')
                                val = 0;
                            break;
                    }
                }

            }
        }
        if (val == 1 && stack.empty())
            System.out.println("Valid");
        else
            System.out.println("Invalid");
//       }

    }
}
